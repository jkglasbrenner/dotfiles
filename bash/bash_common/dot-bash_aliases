# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
umask 0022

# Function for editing PATH environmental variable
# Adapted from https://unix.stackexchange.com/a/217629
pathmunge () {
  if ! echo "$PATH" | /bin/grep -Eq "(^|:)$1($|:)" ; then
    if [ "$2" = "after" ] ; then
      PATH="${PATH}:$1"
    else
      PATH="$1${PATH:+:${PATH}}"
    fi
  fi
}

# Check if reboot is needed
if [[ -f /var/run/reboot-required ]]; then
  echo 'reboot required'
fi

# Set aliases
if command -v emacsclient.sh >/dev/null 2>&1; then
  alias ee="emacsclient.sh"
fi
if command -v direnv >/dev/null 2>&1; then
  alias tmux='direnv exec / tmux'
fi
if command -v java >/dev/null 2>&1; then
  alias bfg='java -jar bfg.jar'
fi

# Set vi mode for bash
set -o vi

# Set VISUAL and EDITOR
export EDITOR='vi'
export VISUAL='vi'

# set PATH so it includes user's private bin if it exists
if [[ -d $HOME/.gem/ruby/2.3.0/bin ]]; then
  pathmunge ${HOME}/.gem/ruby/2.3.0/bin
fi
if [[ -d $HOME/bin ]]; then
  pathmunge ${HOME}/bin
fi
if [[ -d $HOME/.local/bin ]]; then
  pathmunge ${HOME}/.local/bin
fi
if [[ -d $HOME/.local/scripts ]]; then
  pathmunge ${HOME}/.local/scripts
fi
if [[ -d $HOME/.local/src/CLING/inst/bin ]]; then
  pathmunge ${HOME}/.local/src/CLING/inst/bin
fi
if [[ -d /usr/local/cuda-8.0/bin && ! -d /usr/local/Modules/modulefiles/cuda ]]; then
  pathmunge /usr/local/cuda-8.0/bin
  export LD_LIBRARY_PATH="/usr/local/cuda/lib64/${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
fi
if [[ -d ${HOME}/.local/texlive/2017/bin/x86_64-linux ]]; then
  pathmunge ${HOME}/.local/texlive/2017/bin/x86_64-linux
fi
if [[ -d /opt/pgi/linux86-64/2017 && ! -d /usr/local/Modules/modulefiles/pgi ]]; then
  export PGI=/opt/pgi
  export MANPATH=${PGI}/linux86-64/2017/man${MANPATH:+:${MANPATH}}
  export LM_LICENSE_FILE=${PGI}/license.dat${LM_LICENSE_FILE:+:${LM_LICENSE_FILE}}
  pathmunge ${PGI}/linux86-64/2017/bin
fi
if [[ -d ${PGI}/linux86-64/2017/mpi/openmpi && ! -d /usr/local/Modules/modulefiles/openmpi ]]; then
  export MANPATH=${PGI}/linux86-64/2017/mpi/openmpi/share/man${MANPATH:+:${MANPATH}}
  pathmunge ${PGI}/linux86-64/2017/mpi/openmpi/bin
fi
if [[ -d ${PGI}/linux86-64/2017/mpi/mpavich && ! -d /usr/local/Modules/modulefiles/mpavich ]]; then
  export MANPATH=${PGI}/linux86-64/2017/mpi/mpavich/share/man${MANPATH:+:${MANPATH}}
  pathmunge ${PGI}/linux86-64/2017/mpi/mpavich/bin
fi
if [[ -d ${HOME}/.anaconda3/etc/profile.d ]]; then
  . ${HOME}/.anaconda3/etc/profile.d/conda.sh
fi
if [[ -d ${HOME}/.cargo/bin ]]; then
  pathmunge ${HOME}/.cargo/bin
fi

# Disable terminal scroll lock with C-s
stty -ixon

# Perl5
if [[ -d $HOME/.local/lib/perl5 ]]; then
  export PERL5LIB="${HOME}/.local/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
  export PERL_LOCAL_LIB_ROOT="${HOME}/.local${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
  export PERL_MB_OPT="--install_base \"${HOME}/.local\""
  export PERL_MM_OPT="INSTALL_BASE=${HOME}/.local"
fi

# NodeJS
if [[ -d $HOME/.nvm ]]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# Skip Git LFS downloads when running "git pull"
export GIT_LFS_SKIP_SMUDGE=1

export DOCKER_ID_USER="jkglasbrenner"

# if [[ -d ${HOME}/.jupyter/lab ]]; then
#   export JUPYTERLAB_DIR="${HOME}/.jupyter/lab"
# fi

# Source host-specific settings
if [[ -f $HOME/.bash_local ]]; then
  . $HOME/.bash_local
fi

# fzf fuzzy finder
[ -f ${HOME}/.fzf.bash ] && source ${HOME}/.fzf.bash

# added by travis gem
[ -f ${HOME}/.travis/travis.sh ] && source ${HOME}/.travis/travis.sh

# activate fasd
[ -f /usr/bin/fasd ] && eval "$(fasd --init auto)"
