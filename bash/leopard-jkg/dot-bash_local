# .bash_local - Local settings for hostname leopard-jkg

# Start the gpg-agent if not already running
if ! pgrep -x -u "${USER}" gpg-agent >/dev/null 2>&1; then
  if [[ -f $HOME/.gnupg/gpg-agent.conf ]]; then
    gpg-connect-agent /bye >/dev/null 2>&1
  fi
fi

# Set SSH to use gpg-agent
unset SSH_AGENT_PID
if [[ ${gnupg_SSH_AUTH_SOCK_by:-0} -ne $$ && -f $HOME/.gnupg/gpg-agent.conf ]]; then
  export SSH_AUTH_SOCK="${HOME}/.gnupg/S.gpg-agent.ssh"
fi

# Set GPG TTY
export GPG_TTY=$(tty)

# Refresh gpg-agent tty in case user switches into an X session
if command -v gpg-connect-agent >/dev/null 2>&1; then
  if [[ -f $HOME/.gnupg/gpg-agent.conf ]]; then
    gpg-connect-agent updatestartuptty /bye >/dev/null
  fi
fi

# verdi autocompletion
function _aiida_verdi_completion {
  OUTPUT=$( $1 completion "$COMP_CWORD" "${COMP_WORDS[@]}" ; echo 'x')
  OUTPUT=${OUTPUT%x}
  if [[ -z $OUTPUT ]]; then
    # Only newline is a valid separator
    local IFS=$'\n'

    COMPREPLY=( $(compgen -o default -- "${COMP_WORDS[COMP_CWORD]}" ) )
    # Add either a slash or a space, depending on whether it is a folder
    # or a file. printf %q escapes the filename if there are spaces.
    for ((i=0; i < ${#COMPREPLY[@]}; i++)); do
      [[ -d ${COMPREPLY[$i]} ]] && \
        COMPREPLY[$i]=$(printf %q%s "${COMPREPLY[$i]}" "/") || \
          COMPREPLY[$i]=$(printf %q%s "${COMPREPLY[$i]}" " ")
    done

  else
    COMPREPLY=( $(compgen -W "$OUTPUT" -- "${COMP_WORDS[COMP_CWORD]}" ) )
    # Always add a space after each command
    for ((i=0; i < ${#COMPREPLY[@]}; i++)); do
      COMPREPLY[$i]="${COMPREPLY[$i]} "
    done
  fi
}
complete -o nospace -F _aiida_verdi_completion verdi

# Spack
if [[ -d ${HOME}/.local/spack ]]; then
  export SPACK_ROOT=${HOME}/.local/spack
  . ${SPACK_ROOT}/share/spack/setup-env.sh
fi

